name: Example Workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    #container: coqorg/coq:dev
    outputs:
      coq_image_tag: ${{ steps.set-output-step.outputs.coq_image_tag }}
    name: build2
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - run: sudo chmod -R a+rw .
    - name: echo
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: dev
        ocaml_version: default
        export: CI ALLOW_DIFF COQCHKEXTRAFLAGS GITHUB_STEP_SUMMARY COQ_IMAGE
        custom_script: |
          echo "${COQ_IMAGE}"
          printf "%s" "${COQ_IMAGE}" >> .coqimage
    - name: Set coq_image_tag Output
      id: set-output-step
      run: |
        coq_image_tag="$(cat .coqimage)"
        if [ -z "${coq_image_tag}" ]; then
          echo "::warning::.coqimage is empty, parsing docker images"
          echo "::group::docker images"
          docker images
          echo "::endgroup::"
          echo "::group::docker images --format '{{.Repository}}:{{.Tag}}'"
          docker images --format "{{.Repository}}:{{.Tag}}"
          echo "::endgroup::"
          coq_image_tag="$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -o 'coqorg/coq:.*dev.*')"
        fi
        echo "coq_image_tag=${coq_image_tag}" >> $GITHUB_OUTPUT

  fetch-output-job:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch coq_image_tag from Previous Job
        run: echo "COQ_IMAGE_TAG is ${{ needs.build.outputs.coq_image_tag }}"
